{
	"info": {
		"_postman_id": "ccd2b7d3-502b-4326-a686-4de903017813",
		"name": "testcollecter",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "test20",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		},
		{
			"name": "testAuth",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		},
		{
			"name": "test22",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"\r",
							"const response = pm.response.json();\r",
							"pm.globals.get(\"orderId\",response.uuid);\r",
							"pm.test(\"Checkc\", function(){\r",
							"\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.json.customerId).to.equal(customerId);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//const customerId = Math.floor((Math.random() * 100) + 1)\r",
							"//pm.globals.set(\"customerId\", customerId);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"orderId\": {{orderId}},\n   // \"customerId\": {{customerId}}\n\t    \"customerId\": 121345\n\n\t\"products\":\n\t[\n\t\t{\n\t\t\t\"quantity\": {{$randomInt}},\n\t\t\t\"productId\": {{$randomInt}}\n\t\t\t\n\t\t},\n\t\t{\n\t\t\t\"quantity\": {{$randomInt}},\n\t\t\t\"productId\": {{$randomInt}}\n\t\t\t\n\t\t}\n\t]\n\t\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "httpbin.org/post",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "testuuid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"pm.globals.set(\"orderId\",response.uuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "httpbin.org/uuid",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"uuid"
					]
				}
			},
			"response": []
		},
		{
			"name": "testVariable",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.globals.set(\"orderId\",response.uuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "httpbin.org/uuid",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"uuid"
					]
				}
			},
			"response": []
		},
		{
			"name": "CustRandom",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const customerId = Math.floor((Math.random() * 100) + 1)\r",
							"pm.globals.get(\"customerId\",customerId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "httpbin.org/post",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "statuscheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"your test name\", function(){\r",
							"\r",
							"    var jsondata = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.equal(100);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "httpbin.org/post",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		}
	]
}